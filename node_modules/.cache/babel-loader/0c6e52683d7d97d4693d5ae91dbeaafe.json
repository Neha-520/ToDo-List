{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\reactproject\\\\src\\\\Sorting.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Sorting.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Sorting = () => {\n  _s();\n\n  const [array1, setArray1] = useState([]);\n\n  const resetArray = () => {\n    const a = [];\n\n    for (let i = 0; i < 100; i++) {\n      a.push(RandomInt(5, 1000));\n    }\n\n    setArray1(a);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetArray,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), array1.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrayBar\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Sorting, \"4+Wcfvuux1D1674FRBRHcCZj7VI=\");\n\n_c = Sorting;\n\nfunction RandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n_c2 = RandomInt;\nexport default Sorting;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sorting\");\n$RefreshReg$(_c2, \"RandomInt\");","map":{"version":3,"sources":["C:/Users/dell/Documents/reactproject/src/Sorting.jsx"],"names":["React","useState","Sorting","array1","setArray1","resetArray","a","i","push","RandomInt","map","value","index","min","max","Math","floor","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,eAAP;;;;AAEA,MAAMC,OAAO,GAAG,MAChB;AAAA;;AACG,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBH,QAAQ,CAAC,EAAD,CAAjC;;AAEH,QAAMI,UAAU,GAAC,MACjB;AACE,UAAMC,CAAC,GAAC,EAAR;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,GAAd,EAAkBA,CAAC,EAAnB,EAAsB;AACpBD,MAAAA,CAAC,CAACE,IAAF,CAAOC,SAAS,CAAC,CAAD,EAAG,IAAH,CAAhB;AACH;;AACCL,IAAAA,SAAS,CAACE,CAAD,CAAT;AACD,GAPD;;AASA,sBACI;AAAA,4BAGJ;AAAQ,MAAA,OAAO,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHI,EAOFF,MAAM,CAACO,GAAP,CAAW,CAACC,KAAD,EAAOC,KAAP,kBACP;AAAK,MAAA,SAAS,EAAC;AAAf,OACKA,KADL;AAAA;AAAA;AAAA;AAAA,YADJ,CAPE;AAAA,kBADJ;AAiBC,CA9BD;;GAAMV,O;;KAAAA,O;;AA+BN,SAASO,SAAT,CAAmBI,GAAnB,EAAwBC,GAAxB,EAA6B;AACzB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD;;MAFMJ,S;AAIT,eAAeP,OAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport './Sorting.css';\r\n\r\nconst Sorting = () =>\r\n{\r\n   const [array1,setArray1]=useState([]);  \r\n\r\nconst resetArray=()=>\r\n{\r\n  const a=[];\r\n  for(let i=0;i<100;i++){\r\n    a.push(RandomInt(5,1000));\r\n}\r\n  setArray1(a);\r\n}\r\n\r\nreturn(\r\n    <>\r\n\r\n\r\n<button onClick={resetArray}>Click me</button>\r\n\r\n\r\n{\r\n  array1.map((value,index) =>(\r\n      <div className=\"arrayBar\" \r\n      key={index}>\r\n      \r\n    </div> \r\n   ) ) \r\n}\r\n </> \r\n    );\r\n}\r\nfunction RandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n  \r\nexport default Sorting;"]},"metadata":{},"sourceType":"module"}